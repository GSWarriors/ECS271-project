

class GradientBoost:

    def train(train_X, train_y, val_X, val_y):
        data.shape = N*3

        self.gradBoosters = GradBooster[]  # 3

        num_test = 100

        for i in range(3):
            y = binarifyData(classname=i, train_y)  # 0 vs 1-2, 1 vs 0-2
            y_val = binarifyData(classname=i, val_y)
            gradBoosters[i].train(train_X, y, val_X, y_val)

    def predict(test_X):
        predictions = np.zeros((num_test, 3))
        for i in range(3):
            pred = self.gradBoosters[i].predict(test_X)
            predictions[:, i] = pred

        predictions = predictions / np.sum(predictions, axis=1)
